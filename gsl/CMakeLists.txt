project(
		gal-script-lang
		LANGUAGES CXX
)

set(
	${PROJECT_NAME}_SOURCE

	src/dummy.cpp
)

add_library(
	${PROJECT_NAME}
	# todo
	STATIC

	${${PROJECT_NAME}_SOURCE}
)

target_include_directories(
	${PROJECT_NAME}
	PUBLIC 
	${CMAKE_CURRENT_SOURCE_DIR}/include
)

add_library(
		gal::GSL
		ALIAS
		${PROJECT_NAME}
)

target_compile_definitions(
			${PROJECT_NAME}
			INTERFACE 
			${PROJECT_NAME_PREFIX}MAJOR_VERSION=${${PROJECT_NAME_PREFIX}MAJOR_VERSION}
			${PROJECT_NAME_PREFIX}MINOR_VERSION=${${PROJECT_NAME_PREFIX}MINOR_VERSION}
			${PROJECT_NAME_PREFIX}PATCH_VERSION=${${PROJECT_NAME_PREFIX}PATCH_VERSION}
			${PROJECT_NAME_PREFIX}VERSION="${${PROJECT_NAME_PREFIX}VERSION}"
			${PROJECT_NAME_PREFIX}COMPILER_NAME="${${PROJECT_NAME_PREFIX}COMPILER_NAME}"
			${PROJECT_NAME_PREFIX}COMPILER_VERSION="${${PROJECT_NAME_PREFIX}COMPILER_VERSION}"
			${PROJECT_NAME_PREFIX}COMPILER_HAS_META=${${PROJECT_NAME_PREFIX}COMPILER_HAS_META}

			$<$<CXX_COMPILER_ID:MSVC>:${PROJECT_NAME_PREFIX}COMPILER_MSVC>
			$<$<CXX_COMPILER_ID:GNU>:${PROJECT_NAME_PREFIX}COMPILER_GNU>
			$<$<CXX_COMPILER_ID:Clang>:${PROJECT_NAME_PREFIX}COMPILER_CLANG>
			# TODO: MORE COMPILERS HERE.
)

set_compile_options_private(${PROJECT_NAME})

include(${${PROJECT_NAME_PREFIX}CMAKE_3RDPARTY_PATH}/eve.cmake)
include(${${PROJECT_NAME_PREFIX}CMAKE_3RDPARTY_PATH}/foonathan-memory.cmake)

target_link_libraries(
		${PROJECT_NAME}
		PUBLIC
		eve::eve
		foonathan_memory
)
